x-local-network: &local-network
  networks:
    - local-network

x-php: &php
  healthcheck:
    disable: true
  build:
    context: docker/php
    dockerfile: php.dockerfile
    args:
      ENVIRONMENT: development
  restart: unless-stopped
  working_dir: /srv
  volumes:
    - .:/srv

x-nvidia: &nvidia
  restart: unless-stopped
#  runtime: nvidia

services:

  traefik:
    image: traefik:v3.2
    restart: unless-stopped
    networks:
      - local-network
      - traefik-network
    command: >-
      --entryPoints.web.address=:80
      --entryPoints.web.http.redirections.entrypoint.to=web-secure
      --entryPoints.web.http.redirections.entrypoint.scheme=https
      --entryPoints.web-secure.address=:443
      --api=true
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --providers.file.directory=/srv/configs
      --providers.file.watch=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/srv
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.services.traefik.loadBalancer.server.port=8080

  php:
    <<: *php
    networks:
      - local-network
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.php.entryPoints=web-secure
      - traefik.http.routers.php.rule=Host(`$API_DOMAIN`) || Host(`$ASSETS_DOMAIN`) || Host(`$TELESCOPE_DOMAIN`)
      - traefik.http.routers.php.tls=true

  scheduler:
    <<: [ *php, *local-network ]
    command: php artisan schedule:work

  queue:
    <<: [ *php, *local-network ]
    depends_on:
      - redis
      - timescaledb
      - ollama
    command: php artisan queue:work --timeout=720 --memory=1024 --max-jobs=128

  redis:
    <<: *local-network
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379

  timescaledb:
    <<: *local-network
    image: timescale/timescaledb-ha:pg17
    restart: unless-stopped
    environment:
      POSTGRES_DB: $DB_DATABASE
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    command: ["postgres", "-c", "ai.ollama_host=http://ollama:11434"]
    volumes:
      - timescaledb-data:/home/postgres/pgdata/data
    ports:
      - ${DB_PORT}:5432

  ollama:
    <<: [ *nvidia, *local-network ]
    networks:
      - local-network
      - traefik-network
    image: ollama/ollama:0.5.1
    restart: unless-stopped
    volumes:
      - .ollama:/root/.ollama

volumes:
  redis-data:
  timescaledb-data:

networks:
  local-network:
  traefik-network:
    name: traefik-network
    external: true
